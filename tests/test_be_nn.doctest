test_be_nn.doctest - more detailed doctests for stdnum.be.nn module

Copyright (C) 2022 Arthur de Jong

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301 USA


This file contains more detailed doctests for the stdnum.be.nn module. It
tries to test more corner cases and detailed functionality that is not
really useful as module documentation.

>>> from stdnum.be import nn


Extra tests for getting birth date, year and/or month


>>> nn.get_birth_date('85.07.30-033 28')
datetime.date(1985, 7, 30)
>>> nn.get_birth_year('85.07.30-033 28')
1985
>>> nn.get_birth_month('85.07.30-033 28')
7
>>> nn.get_birth_day_of_month('85.07.30-033 28')
30
>>> nn.get_birth_date('17 07 30 033 84')
datetime.date(2017, 7, 30)
>>> nn.get_birth_year('17 07 30 033 84')
2017
>>> nn.get_birth_month('17 07 30 033 84')
7
>>> nn.get_birth_day_of_month('17 07 30 033 84')
30
>>> nn.get_birth_date('12345678901')
Traceback (most recent call last):
    ...
InvalidChecksum: ...
>>> nn.get_birth_year('12345678901')
Traceback (most recent call last):
    ...
InvalidChecksum: ...
>>> nn.get_birth_month('12345678901')
Traceback (most recent call last):
    ...
InvalidChecksum: ...
>>> nn.get_birth_day_of_month('12345678901')
Traceback (most recent call last):
    ...
InvalidChecksum: ...
>>> nn.get_birth_date('00000100166') # Exact date of birth unknown (fictitious date case 1900-00-01)
>>> nn.get_birth_year('00000100166')
>>> nn.get_birth_month('00000100166')
>>> nn.get_birth_day_of_month('00000100166')
>>> nn.get_birth_date('00000100195') # Exact date of birth unknown (fictitious date case 2000-00-01)
>>> nn.get_birth_year('00000100195')
>>> nn.get_birth_month('00000100195')
>>> nn.get_birth_day_of_month('00000100195')
>>> nn.get_birth_date('00000000128') # Only birth year known (2000-00-00)
>>> nn.get_birth_year('00000000128')
2000
>>> nn.get_birth_month('00000000128')
>>> nn.get_birth_day_of_month('00000000128')
>>> nn.get_birth_date('00010000135') # Only birth year and month known (2000-01-00)
>>> nn.get_birth_year('00010000135')
2000
>>> nn.get_birth_month('00010000135')
1
>>> nn.get_birth_day_of_month('00010000135')
>>> nn.get_birth_date('85073500107') # Invalid day (35)
Traceback (most recent call last):
    ...
InvalidComponent: ...
>>> nn.get_birth_year('85073500107')
Traceback (most recent call last):
    ...
InvalidComponent: ...
>>> nn.get_birth_month('85073500107')
Traceback (most recent call last):
    ...
InvalidComponent: ...
>>> nn.get_birth_day_of_month('85073500107')
Traceback (most recent call last):
    ...
InvalidComponent: ...
>>> nn.get_birth_date('85133000105') # Invalid month (13)
Traceback (most recent call last):
    ...
InvalidComponent: ...
>>> nn.get_birth_year('85133000105')
Traceback (most recent call last):
    ...
InvalidComponent: ...
>>> nn.get_birth_month('85133000105')
Traceback (most recent call last):
    ...
InvalidComponent: ...
>>> nn.get_birth_day_of_month('85133000105')
Traceback (most recent call last):
    ...
InvalidComponent: ...


Extra tests for getting gender

>>> nn.get_gender('75.06.08-980.09')
'F'
