test_cr_cr.doctest - more detailed doctests for stdnum.cr.cr module

Copyright (C) 2019 Leandro Regueiro

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301 USA


This file contains more detailed doctests for the stdnum.cr.cr module. It
tries to test more corner cases and detailed functionality that is not really
useful as module documentation.

>>> from stdnum.cr import cr


Tests for some corner cases.

>>> cr.validate('155812994816')
'155812994816'
>>> cr.validate('CR 172400024706')
'172400024706'
>>> cr.validate('10123456789')
'10123456789'
>>> cr.format('122200569906')
'122200569906'
>>> cr.validate('12345678')
Traceback (most recent call last):
    ...
InvalidLength: ...
>>> cr.validate('FF0123456789')
Traceback (most recent call last):
    ...
InvalidFormat: ...
>>> cr.validate('30123456789')  # Invalid first digit.
Traceback (most recent call last):
    ...
InvalidComponent: ...


These have been found online and should all be valid numbers.

>>> numbers = '''
...
... 155812994816
... 172400024706
... 184000074805
... 117001702423
... 186200114917
... 117000679620
... 172400118430
... 117000809436
... 122200569906
... 117000679727
... 117001139718
... 184000033224
...
... '''
>>> [x for x in numbers.splitlines() if x and not cr.is_valid(x)]
[]
